a_w_newrow[a_w_newrow$department=="HR"&"Finance"&"Operations",column]
a_w_newrow[a_w_newrow$department=="HR"&"Finance"&"Operations",column]
a_w_newrow[a_w_newrow$department=="HR"& a_w_newrow$department=="Finance"& a_w_newrow$department=="Operations",column]
#employees under HR, Finance and Operations department
column <- c(2,3,5)
a_w_newrow[a_w_newrow$department=="HR"|a_w_newrow$department=="Finance"|a_w_newrow$department=="Operations",column]
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=a.date(star_dat),
stringsAsFactors = FALSE)
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.date(star_dat),
stringsAsFactors = FALSE)
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.Date(star_dat),
stringsAsFactors = FALSE)
mydates <- as.Date(c("2007-06-22", "2004-02-13"))
mydates
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.Date(c(2012-01-01, 2013-09-23, 2014-11-15, 2014-05-11, 2015-03-27)),
stringsAsFactors = FALSE)
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11, "2015-03-27"")),
stringsAsFactors = FALSE)
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11, "2015-03-27"")),
stringsAsFactors = FALSE)
stringsAsFactors = FALSE)
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11", "2015-03-27")),
stringsAsFactors = FALSE)
##Part C (Question 1)
#Create a dataframe
a<- data.frame("emp_id"=1:5,
"emp_name"=c("Rick", "Dan", "Michelle", "Ryan", "Gary"),
"salary"=c(623.3, 515.2, 611.0, 729.0, 843.25),
"start_date"=as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11", "2015-03-27")),
stringsAsFactors = FALSE)
#Rename start_date to emp_since
names(a)[names(a) == "start_date"] <- "emp_since"
#Retrieve value of column 2 and 3
a[,2:3]
#Adding a new columns
a_w_newcol<-cbind(a, department=c("IT","Operations","IT","HR","Finance"))
stringsAsFactors = FALSE)
#Add two new rows
new_rows <- data.frame("emp_id"=6:7,
"emp_name"=c("Rosa", "James"),
"salary"=c(578.0, 722.5),
"emp_since"=as.Date(c("2013-06-20","2013-07-29")),
"department"=c("IT", "Operations"),
stringsAsFactors = FALSE)
a_w_newrow <- rbind(a_w_newcol, new_rows)
#Update salary of Michelle
Michelle_salary<- a_w_newrow$salary[a_w_newrow$emp_name=="Michelle"]
New_Michelle_salary<-Michelle_salary+89
a_w_newrow$salary[a_w_newrow$emp_name=="Michelle"]<-New_Michelle_salary
#display emp_data
print(a_w_newrow)
##Part C (Question 2)
#employees salary more than 700
emp_morethan700<-a_w_newrow$emp_name[a_w_newrow$salary>700]
emp_morethan700
#employees from the IT department get a salary in the range of $510-700
emp_ITinrange<-a_w_newrow$emp_name[a_w_newrow$salary>=510 & a_w_newrow$salary<=700 & a_w_newrow$department=="IT"]
emp_ITinrange
#employees under HR, Finance and Operations department
column <- c(2,3,5)
a_w_newrow[a_w_newrow$department=="HR"|a_w_newrow$department=="Finance"|a_w_newrow$department=="Operations",column]
??Lls
??ls
ls()
list=ls()
list
rm(list=ls())
setwd("C:/Users/User/Desktop/Programming/w4/Assignment 1")
##Confirm working directory
getwd()
## Read file
data<-read.csv("country_vaccinations.csv")
## Understand the dataframe
dim(data)
head(data)
str(data)
summary(data)
## Explore type of vaccines column
typeof_vaccines <- data$vaccines
summary(typeof_vaccines)
## Remove irrelevant columns
data$source_name <- NULL
data$source_website <- NULL
head(data)
##Subset used columns into a new dataframe, A
A<-subset(data, select=c(country, total_vaccinations, total_vaccinations_per_hundred, vaccines))
A
x <- A[!is.na(A$total_vaccinations), ]
x
str(x)
summary(x)
vaccinated_groupby_country <- aggregate(x, by = list(x$country), max)
vaccinated_groupby_country$Group.1<-NULL
vaccinated_groupby_country
dim(vaccinated_groupby_country)
## names(vaccinated_groupby_country)[1] <- "Country"
## names(vaccinated_groupby_country)[2] <- "Total_Vaccinated"
## Type of vaccine used by most country
## Sort the number of vaccination according to country (descending order)
vaccinated_order<-vaccinated_groupby_country[order((vaccinated_groupby_country$total_vaccinations),decreasing=TRUE),]
##Subset only first 10 countries with highest number of people vaccinated
top_vaccinated_country <- vaccinated_order[1:10,]
top_vaccinated_country
for (i in 1:nrow(top_vaccinated_country)){
if (top_vaccinated_country$total_vaccinations_per_hundred=="NA"){
top_vaccinated_country$NA_situation <- 1
} else {
top_vaccinated_country$NA_situation <- 0
}
}
for (i in 1:nrow(top_vaccinated_country)){
if (top_vaccinated_country$total_vaccinations_per_hundred[i]=="NA"){
top_vaccinated_country$NA_situation[i] <- 1
} else {
top_vaccinated_country$NA_situation[i] <- 0
}
}
# load the library
library(ggplot2)
top_vaccinated_country
vaccinated_order
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country=="Malaysia"]
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country=="India"]
vaccinated_groupby_country
dim(vaccinated_groupby_country)
vaccinated_order
dim(vaccinated_order)
vaccinated_order
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country=="Malaysia"]
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country=="India"]
malaysia_data
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country==India]
class(vaccinated_order)
str(vaccinated_order)
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country=="Malaysia"]
malaysia_data <-vaccinated_order[vaccinated_order$country=="India"]
malaysia_data
malaysia_data <-vaccinated_order[vaccinated_order$country=="India",]
malaysia_data
malaysia_data <-vaccinated_order[vaccinated_order$country=="Malaysia",]
malaysia_data
##combine malaysia data with top 10 countries
combined_vaccinated_country <-rbind(top_vaccinated_country, malaysia_data)
top_vaccinated_country
##Confirm working directory
getwd()
## Read file
data<-read.csv("country_vaccinations.csv")
## Understand the dataframe
dim(data)
head(data)
str(data)
summary(data)
## Explore type of vaccines column
typeof_vaccines <- data$vaccines
summary(typeof_vaccines)
## Remove irrelevant columns
data$source_name <- NULL
data$source_website <- NULL
head(data)
##Subset used columns into a new dataframe, A
A<-subset(data, select=c(country, total_vaccinations, total_vaccinations_per_hundred, vaccines))
A
##Remove NA's for used columns
x <- A[!is.na(A$total_vaccinations), ]
x
str(x)
summary(x)
## Subset number of vaccination per country by grouping
vaccinated_groupby_country <- aggregate(x, by = list(x$country), max)
vaccinated_groupby_country$Group.1<-NULL
vaccinated_groupby_country
dim(vaccinated_groupby_country)
## names(vaccinated_groupby_country)[1] <- "Country"
## names(vaccinated_groupby_country)[2] <- "Total_Vaccinated"
## Type of vaccine used by most country
## Sort the number of vaccination according to country (descending order)
vaccinated_order<-vaccinated_groupby_country[order((vaccinated_groupby_country$total_vaccinations),decreasing=TRUE),]
class(vaccinated_order)
str(vaccinated_order)
##Subset Malaysia data
malaysia_data <-vaccinated_order[vaccinated_order$country=="Malaysia",]
malaysia_data
##Subset only first 10 countries with highest number of people vaccinated
top_vaccinated_country <- vaccinated_order[1:10,]
top_vaccinated_country
combined_vaccinated_country <-rbind(top_vaccinated_country, malaysia_data)
combined_vaccinated_country
library(ggplot2)
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations))) +
geom_col(aes(y = total_vaccinations), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2000000), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2000000, name = "Total Vaccinations per hundred"))
combined_vaccinated_country
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_thousand<-combined_vaccinated_country$total_vaccinations[i]/1000)
}
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_thousand<-combined_vaccinated_country$total_vaccinations[i]/1000
}
top_vaccinated_country
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_thousand<-combined_vaccinated_country$total_vaccinations[i]/1000
}
combined_vaccinated_country
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_thousand[i]<-combined_vaccinated_country$total_vaccinations[i]/1000
}
combined_vaccinated_country
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_thousand[i]<-combined_vaccinated_country$total_vaccinations[i]/1000000
}
combined_vaccinated_country
library(ggplot2)
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations))) +
geom_col(aes(y = total_vaccinations), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2000000), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2000000, name = "Total Vaccinations per hundred"))
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_million[i]<-combined_vaccinated_country$total_vaccinations[i]/1000000
}
combined_vaccinated_country
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2000000), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2000000, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2000000), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2000000, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white")
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2000000), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2000000, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*100), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./100, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~., name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred/10), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./10, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~., name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred/3), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./3, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*10), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./10, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*5), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./5, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*3), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./3, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*4), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./4, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2, name = "Total Vaccinations per hundred"))
for (i in 1:nrow(top_vaccinated_country)){
if top_vaccinated_country$country=="Malaysia"{
break
}else {
rbind(top_vaccinated_country, malaysia_data)
}
}
top_vaccinated_country <- vaccinated_order[1:10,]
top_vaccinated_country
combined_vaccinated_country <-rbind(top_vaccinated_country, malaysia_data)
combined_vaccinated_country
for (i in 1:nrow(combined_vaccinated_country)){
if combined_vaccinated_country$total_vaccinations_per_hundred [i]>50{
combined_vaccinated_country$vaccinated_pectabove50 [i] <-1
}else {
combined_vaccinated_country$vaccinated_pectabove50 [i] <-0
}
}
for (i in 1:nrow(combined_vaccinated_country)){
if (combined_vaccinated_country$total_vaccinations_per_hundred [i]>50){
combined_vaccinated_country$vaccinated_pectabove50 [i] <-1
}else {
combined_vaccinated_country$vaccinated_pectabove50 [i] <-0
}
}
combined_vaccinated_country
ggplot(combined_vaccinated_country, aes(x="country", y="total_vaccinations_per_hundred", fill=vaccinated_pectabove50))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="country", y="total_vaccinations_per_hundred", fill="country"))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
combined_vaccinated_country
ggplot(combined_vaccinated_country, aes(x="country", y="total_vaccinations_per_hundred", fill="vaccines"))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="country", y=proportions(), fill="vaccines"))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="country", y=proportions(total_vaccinations_per_hundred), fill="vaccines"))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y="total_vaccinations_per_hundred", fill="country"))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y=total_vaccinations_per_hundred, fill=country))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y=total_vaccinations_per_hundred, fill=vaccines))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y=total_vaccinations, fill=vaccines))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y=total_vaccinations, fill=vaccinated_pectabove50))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y=total_vaccinations, fill=vaccinated_pectabove50))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
for (i in 1:nrow(combined_vaccinated_country)){
if (combined_vaccinated_country$total_vaccinations_per_hundred [i]>50){
combined_vaccinated_country$vaccinated_pectabove50 [i] <-">50"
}else {
combined_vaccinated_country$vaccinated_pectabove50 [i] <-"<50"
}
}
for (i in 1:nrow(combined_vaccinated_country)){
combined_vaccinated_country$total_vaccinations_million[i]<-combined_vaccinated_country$total_vaccinations[i]/1000000
}
combined_vaccinated_country
# load the library
library(ggplot2)
lot(combined_vaccinated_country, aes(x="", y=total_vaccinations, fill=vaccinated_pectabove50))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x="", y=total_vaccinations, fill=vaccinated_pectabove50))+
geom_col() +
coord_polar("y") +
theme_void() +
scale_fill_viridis_d()
combined_vaccinated_country
ggplot(combined_vaccinated_country, aes(x = country, y = total_vaccinations, fill = vaccinated_pectabove50)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = country, y =total_vaccinations_million, fill = vaccine)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = country, y =total_vaccinations_million, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = country, y =total_vaccinations_million, fill = vaccinated_pectabove50)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = country, y =total_vaccinations_per_hundred, fill = vaccinated_pectabove50)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million), y =total_vaccinations_per_hundred, fill = vaccinated_pectabove50)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_million), y =total_vaccinations_per_hundred, fill = vaccinated_pectabove50)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_million), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_million), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-17, 17)
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-17, 17)
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-17, 17)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-17, 17)
combined_vaccinated_country
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-17, 17)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-10, 10)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-30, 30)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-100, 100)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-70, 70)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)+
scale_fill_viridis_d()
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)+
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)
ggplot(combined_vaccinated_country, aes(x = reorder(country,-total_vaccinations_million))) +
geom_col(aes(y = total_vaccinations_million), size = 1, color = "darkblue", fill = "white") +
geom_line(aes(y = total_vaccinations_per_hundred*2), size = 1.5, color="gold", group = 1) +
scale_y_continuous(sec.axis = sec_axis(~./2, name = "Total Vaccinations per hundred"))
ggplot(combined_vaccinated_country, aes(x = reorder(country,total_vaccinations_per_hundred), y =total_vaccinations_per_hundred, fill = vaccines)) +
geom_col(position = "dodge") +
coord_polar()+
ylim(-60, 60)
shiny::runApp('C:/Users/User/Desktop/co2_shinyapp/CO2_ShinyApp')
