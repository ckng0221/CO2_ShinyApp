## Quetion 1 i
df %>% select(starts_with("s")) %>% filter(Petal.Length > 1.3 & Sepal.Length> 3.3)
df %>% select(starts_with("s")) %>% filter(df, Petal.Length > 1.3 & Sepal.Length> 3.3)
df
str(df)
df %>% select(starts_with("s"))
## Part 1
## Quetion 1 i
df %>% select(starts_with("s")) %>% filter(Petal.Length > 1.3)
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
df %>% select(starts_with("s")) %>% filter(Petal.Length > 1.3)
rm(list=ls())
df <- iris
df
str(df)
install.packages("dplyr")
library(dplyr)
install.packages("magrittr")
library(magrittr)
install.packages("magrittr")
library(magrittr)
df %>% select(starts_with("s")) %>% filter(Petal.Length > 1.3)
df %>% select(starts_with("s"))
library(dplyr)
df %>% select(starts_with("s")) %>% filter(Petal.Length > 1.3)
df %>% select(starts_with("s"))
df %>% filter(spesies, Petal.Length > 1.3 & Sepal.Length> 3.3 )  %>% select(starts_with("s"))
df
df %>% filter(Species, Petal.Length > 1.3 & Sepal.Length> 3.3 )  %>% select(starts_with("s"))
df %>% filter(Species, Petal.Length > 1.3 & Sepal.Length> 3.3 )
df %>% filter( Petal.Length > 1.3 & Sepal.Length> 3.3 )
df %>% filter( Petal.Length > 1.3 & Sepal.Length> 3.3 )  %>% select(starts_with("s"))
df<-select(Sepal.Length, Petal.Length, Species) %>%
filter(Species=="setosa" & Species=="veriscolar" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species)
df
df
df<-select(Sepal.Length, Petal.Length, Species) %>%
filter(Species=="setosa" & Species=="veriscolar" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df
## Quetion 1 ii
df<-select(Sepal.Length, Petal.Length, Species) %>%
filter(Species=="setosa" & Species=="veriscolar" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
source('C:/Users/User/Desktop/Programming/w5/tutorial5.R', echo=TRUE)
df<-select(Sepal.Length, Petal.Length, Species) %>%
filter(Species=="setosa" & Species=="veriscolar" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)
filter(Species=="setosa" & Species=="veriscolar" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" & Species=="veriscolar" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" & Species=="veriscolor" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor" & Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5)
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor") %>%
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5)%>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
df %>%  select(Sepal.Length, Petal.Length, Species)
filter(Species=="setosa" | Species=="veriscolor")
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="veriscolor")
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="versicolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
by_species<-group_by(df, Species) %>%
summarize(min(petal_legth), max(petal_length), mean(petal_length))
by_species<-group_by(df, Species) %>%
summarise(min(Petal.Legth), max(Petal.Length), mean(Petal.Length))
by_species<-group_by(df, Species) %>%
summarise(min=min(Petal.Legth), max=max(Petal.Length), avg=mean(Petal.Length))
by_species %>% group_by(Species) %>%
summarise(min=min(Petal.Legth), max=max(Petal.Length), avg=mean(Petal.Length))
df %>% group_by(Species) %>%
summarise(min=min(Petal.Legth), max=max(Petal.Length), avg=mean(Petal.Length))
df %>% group_by(Species) %>%
summarise(minimum=min(Petal.Length), maximum=max(Petal.Length), avg=mean(Petal.Length))
install.packages ("Sqldf")
library(Sqldf)
install.packages ("Sqldf")
install.packages ("sqldf")
library(sqldf)
sqldf("select Sepal.Length, Sepal.Width from df ")
df
sqldf("select Sepal.Length from df ")
## Question 3 i
df
sqldf("select Sepal.Length from df ")
## Question 3 i
df
sqldf("select Sepal.Width from df ")
## Question 3 i
str(df)
sqldf("select Sepal.Length from df")
sqldf("selectSepal.Length from df")
sqldf("select Sepal.Length from df")
sqldf("select Species from df")
sqldf("select Sepal.Length, Species from df")
sqldf("select Sepal, Species from df")
sqldf("SELECT COLUMN_NAME FROM df WHERE COLUMN_NAME LIKE '%s%')
sqldf("SELECT COLUMN_NAME FROM df WHERE COLUMN_NAME LIKE '%s%'")
sqldf("SELECT Species, Sepal.Length FROM df")
sqldf("SELECT Species, Sepal.Width FROM df")
sqldf("SELECT Species, Petal.Width FROM df")
sqldf("SELECT Species FROM df")
str(df)
sqldf("SELECT Species, Sepal.Length FROM df")
sqldf("SELECT Species FROM df WHERE Petal.Length > 1.3 AND Sepal.Length> 3.3")
sqldf("SELECT Species FROM df WHERE `Petal.Length` > 1.3 AND `Sepal.Length` > 3.3")
sqldf("SELECT Species, Petal.Length`, `Sepal.Length` FROM df WHERE `Petal.Length` > 1.3 AND `Sepal.Length` > 3.3")
sqldf("SELECT Species, `Petal.Length`, `Sepal.Length` FROM df WHERE `Petal.Length` > 1.3 AND `Sepal.Length` > 3.3")
df %>% filter( Petal.Length > 1.3 & Sepal.Length> 3.3 )  %>% select(starts_with("s"))
sqldf("SELECT Species, `Sepal.Length`, `Sepal.Width` FROM df WHERE `Petal.Length` > 1.3 AND `Sepal.Length` > 3.3")
sqldf("SELECT `Sepal.Length`, `Sepal.Width`, Species FROM df WHERE `Petal.Length` > 1.3 AND `Sepal.Length` > 3.3")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' AND
`Petal.Length`>1.5 AND `Petal.Length` <6.5 ORDER BY Species DES")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' AND
`Petal.Length`>1.5 AND `Petal.Length` <6.5 ORDER BY Species DSC")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' AND
`Petal.Length`>1.5 AND `Petal.Length` <6.5 order by Species DSC")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' AND
`Petal.Length`>1.5 AND `Petal.Length` <6.5 order by Species DESC")
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="versicolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' AND `Petal.Length`>1.5 AND `Petal.Length` <6.5 order by Species DESC")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' WHERE `Petal.Length`>1.5 AND `Petal.Length` <6.5 order by Species DESC")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' OR `Petal.Length`>1.5 AND `Petal.Length` <6.5 order by Species DESC")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE Species=='setosa' OR Species=='versicolor' AND `Petal.Length` BETWEEN 1.5 AND 6.5 order by Species DESC")
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE `Petal.Length` BETWEEN 1.5 AND 6.5 AND Species=='setosa' OR Species=='versicolor' order by Species DESC")
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="versicolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
sqldf("SELECT `Sepal.Length`, `Petal.Length`, `Species` FROM df WHERE `Petal.Length` > 1.5 AND `Petal.Length`<6.5 AND Species=='setosa' OR Species=='versicolor' order by Species DESC")
df %>%  select(Sepal.Length, Petal.Length, Species)  %>%
filter(Species=="setosa" | Species=="versicolor") %>%
filter(Petal.Length>1.5 & Petal.Length <6.5) %>%
arrange(desc(Species))
sqldf("SELECT AVG(Petal.Length), MIN(Petal.Length), MAX(Petal.Length) FROM df GROUP BY Species")
sqldf("SELECT AVG(`Petal.Length`), MIN(`Petal.Length`), MAX(`Petal.Length`) FROM df GROUP BY Species")
df %>% group_by(Species) %>%
summarise(minimum=min(Petal.Length), maximum=max(Petal.Length), avg=mean(Petal.Length))
## Question 3 iii
sqldf("SELECT AVG(`Petal.Length`), MIN(`Petal.Length`), MAX(`Petal.Length`), Species FROM df GROUP BY Species")
sqldf("SELECT Species, MIN(`Petal.Length`), MAX(`Petal.Length`), AVG(`Petal.Length`) FROM df GROUP BY Species")
install.packages("dplyr")
library(dplyr)
install.packages("magrittr")
library(magrittr)
install.packages ("sqldf")
library(sqldf)
install.packages("dplyr")
library(dplyr)
library(magrittr)
library(sqldf)
detach("package:magrittr", unload = TRUE)
library(magrittr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
##Confirm working directory
getwd()
## Read file
data<-read.csv("country_vaccinations.csv")
## Understand the dataframe
dim(data)
head(data)
str(data)
summary(data)
## Explore type of vaccines column
typeof_vaccines <- data$vaccines
summary(typeof_vaccines)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(data)
data(attitude)
attitude
library(datasets)
data(attitude)
attitude
## 1. Basic descriptive statistics
summary(attitude)
## 1. Basic descriptive statistics
summary(attitude)
## 1(a). Difference between (attitude[3]) and (attitude$learning)
attitude[3]
attitude$learning
name(attitude)
names(attitude)
nrow(attitude)
str(dataset)
str(attitude)
head(attitude)
head(attitude, 15)
attitude[-1,]
tail(attitude)
tail(attitude, 15)
tail(attitude, 15)[-1,]
table(is.na(attitude))
summary(attitude)
colSums(is.na(attitude))
sum(is.na(attitude$rating))
attach(mtcars)
plot(priviliges, learning, main="Learning Attitude",
xlab="Priviliges ", ylab="Learning", pch=19)
attach(attitude)
plot(priviliges, learning, main="Learning Attitude",
xlab="Priviliges ", ylab="Learning", pch=19)
attach(attitude)
plot(priviliges, learning, main="Learning Attitude",
xlab="Priviliges ", ylab="Learning", pch=19)
plot(attitude$priviliges, attitude$learning, main="Learning Attitude",
xlab="Priviliges ", ylab="Learning", pch=19)
plot(attitude$priviliges, attitude$learning, main="Learning Attitude",
xlab="Priviliges ", ylab="Learning", pch=20)
length(attitude$priviliges)
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=20)
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=10)
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=5)
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=7)
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=6)
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=1)
## Plot the graph shown below, and make it appear on a file device (a pdf file)
pdf(file="plot.pdf")
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=1)
with(attitude, plot(privileges, learning))
plot(attitude$privileges, attitude$learning, main="Learning Attitude",
xlab="Privileges ", ylab="Learning", pch=1)
pdf(file="plot.pdf")
with(attitude, plot(privileges, learning))
title(main="Learning Attitude")
pdf(file="plot.pdf")
with(attitude, plot(privileges, learning))
title(main="Learning Attitude")
dev.off()
getwd()
library(dplyr)
install.packages('stats')
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("nycflights13")
library(nycflights13)
library(nycflights13)
head(nycflights13)
head(nycflights13)
head(nycflights13)
data<- nycflights13
head(data)
data<- nycflights13
data<- flights
head(data)
library(dplyr)
names(data)
install.packages("mosaic")
favstats(~arr_delay, data=Sample25)
library(mosaic)
favstats(~arr_delay, data=Sample25)
set.seed(101)
Sample25 <- SF %>%
sample_n(size=25)
SF <- flights %>% filter(dest =='SFO',
!is.na(arr_delay))
set.seed(101)
Sample25 <- SF %>%
sample_n(size=25)
favstats(~arr_delay, data=Sample25)
View(Sample25)
View(Sample25)
SF %>% mutate(is.late = arr_delay > 124)
View(data)
View(SF)
view(SF)
View(SF)
View(SF)
SF %>% mutate(is.late = arr_delay > 124)
View(SF)
View(SF)
View(is.late)
head(SF)
Summary(SF)
head(SF[is.late])
SF %>% mutate(is.late = arr_delay > 124) %>%
summarize(prop.late = mean(is.late))
data(iris)
hf<-iris
hf%>%mutate(is.late=Sepal.Length > 5)
hf%>%mutate(is.late=Sepal.Length > 5) %>% summarize(prop.late=mean(is.late))
vec%>%mutate(is.late=vec > 5)
vec<-c(1, 1, 1, 6)
vec1<-c(true, true, true, false)
hf<-cbind(vec,vec1)
vec<-c(1, 1, 1, 6)
vec1<-c(true, true, true, false)
vec1<-c("true", "true", "true", "false")
hf<-cbind(vec,vec1)
hf
hf %>% mutate(is.late = vec > 5) %>%
summarize(prop.late = mean(is.late))
hf<-as.dataframe(cbind(vec,vec1))
hf<-as.data.frame(cbind(vec,vec1))
hf
hf %>% mutate(is.late = vec > 5) %>%
summarize(prop.late = mean(is.late))
hf %>% mutate(is.late = vec > 5)
favstats(~arr_delay, data=SF)
qdata(~arr_delay, p=0.98, data=Sample25)
tally(~arr_delay<90, data=SF, format='proportion')
qdata(~arr_delay, p=0.98, data=SF)
favstats(~arr_delay, data=Sample25)
qdata(~arr_delay, p=0.98, data=Sample25)
tally(~arr_delay<90, data=SF, format='proportion')
#Bootstrap
Small<-sample_n(SF, size=3, replace=FALSE)
sMALL
Small
Small %>% sample_n(size=3, replace=TRUE)
mean(~arr_delay, data=sample_n(Orig_sample, size=n, replace=TRUE))
Orig_sample <- SF %>% sample_n(size=n, replace=FALSE)
n <-200
Orig_sample <- SF %>% sample_n(size=n, replace=FALSE)
mean(~arr_delay, data=sample_n(Orig_sample, size=n, replace=TRUE))
favstats(~means, data= Bootstrap_trials)
Bootstrap_trials <- do(500)*mean(~arr_delay,
data=sample_n(Orig_sample, size=n, replace=TRUE))
favstats(~means, data= Bootstrap_trials)
favstats(~mean, data= Bootstrap_trials)
Orig_sample <- SF %>% sample_n(size=n, replace=FALSE)
mean(~arr_delay, data=sample_n(Orig_sample, size=n, replace=TRUE))
n <-200
Orig_sample <- SF %>% sample_n(size=n, replace=FALSE)
mean(~arr_delay, data=sample_n(Orig_sample, size=n, replace=TRUE))
Bootstrap_trials <- do(500)*mean(~arr_delay,
data=sample_n(Orig_sample, size=n, replace=TRUE))
favstats(~mean, data= Bootstrap_trials)
Trials_200 <- do(500)*mean(~arr_delay,
data=sample_n(SF, size=n, replace=TRUE))
favstats(~mean, data= Trials_200)
n <-500
Bootstrap_trials <- do(500)*mean(~arr_delay,
data=sample_n(Orig_sample, size=n, replace=TRUE))
favstats(~mean, data= Bootstrap_trials)
Trials_200 <- do(500)*mean(~arr_delay,
data=sample_n(SF, size=n, replace=TRUE))
favstats(~mean, data= Trials_200)
View(Orig_sample)
View(Bootstrap_trials)
#Outliers
SF %>% filter(arr_delay>=420) %>% select(month, day, dep_delay, arr_Delay, carrier)
#Outliers
SF %>% filter(arr_delay>=420) %>% select(month, day, dep_delay, arr_delay, carrier)
tally(~hour, data=SF)
SF %>%
ggplot(aes(x=hour, y=arr_delay))+
geom_boxplot(alpha=0.1, aes(group=hour))+ geom_smooth(method='lm')+
xlab("Scheduled hour of departure") + ylab("Arrival delay (minutes)")+
coord_cartesian(ylim=c(-30,120))
mod1 <- lm(arr_delay~hour, data=SF)
msummary(mod1)
install.packages("mdsr")
#Confounding factors
library(mdsr)
SAT_2010<-SAT_2010
library(mdsr)
SAT_2010 <-mutate(SAT_2010, Salary=salary/1000)
SAT_plot <- ggplot(data=SAT_2010, aes(x=Salary, y=total))+
geom_point()+geom_smooth(method="lm")+
ylab("Average total score on the SAT")+
xlab("Average teacher salary (thousands of USD)")
SAT_PLOT
library(mdsr)
SAT_2010 <-mutate(SAT_2010, Salary=salary/1000)
SAT_PLOT <- ggplot(data=SAT_2010, aes(x=Salary, y=total))+
geom_point()+geom_smooth(method="lm")+
ylab("Average total score on the SAT")+
xlab("Average teacher salary (thousands of USD)")
SAT_PLOT
SAT_mod1 <-lm(total~Salary, data=SAT_2010)
msummary(SAT_mod1)
favstats(~sat_pct, data= SAT_2010)
SAT_2010<-SAT_2010 %>% mutate(SAT_grp=ifelse(sat_pct<=27,'Low','High'))
tally(~SAT_grp, data=SAT_2010)
SAT_PLOT %+% SAT_2010 + aes(color=SAT_grp)
msummary(SAT_mod1)
SAT_mod2 <-lm(total~Salary+sat_pct, data=SAT_2010)
msummary(SAT_mod2)
data<-mtcars
View(data)
sapply(data, function(x) sum(is.na(x)))
a<-c(1,2,3)
b<-c(NA,NA,1)
data<-cbind(a,b)
View(data)
c<-c(NA,1,1)
data<-cbind(a,b,c)
View(data)
sapply(data, function(x) sum(is.na(x)))
data1<-as.data.frame(data)
View(data1)
sapply(data1, function(x) sum(is.na(x)))
sum(is.na(x)
sum(is.na(x))
sum(is.na(x))
data<-mtcars
sapply(data, function(x) sum(is.na(x)))
data$am[data$am==1]<-manual
data$am[data$am==0]<-automatic
data$am[data$am==1]<-"manual"
data$am[data$am==0]<-"automatic"
data$am
data
install.packages("corrplot")
data<-mtcars
corrplot(data, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
library(corrplot)
corrplot(data, type = "upper", order = "hclust",
tl.col = "black", tl.srt = 45)
install.packages("Hmisc")
library("Hmisc")
res2 <- rcorr(data)
res2 <- rcorr(as.matrix(data))
res2
corrplot(res2, type = "upper", order = "hclust")
corrplot(data, type = "upper", order = "hclust")
M<-cor(data)
head(round(M,2))
corrplot(corr, method="circle")
corrplot(M, method="circle")
corrplot(M, method="color", method='number')
corrplot(M, method="color", method='number')
corrplot(M, method="color")
# performance matrix
log_reg_performance_tbl <- summary(conf_mat_obj) %>% filter(
.metric == "accuracy" |
.metric == "sens" |
.metric == "spec" |
.metric == "precision" ) %>%
# .metric == "ppv"  |
# .metric == "npv"  |
# .metric == "f_meas") %>%
select(-.estimator) %>%
rename("metric" = .metric,
"estimate" = .estimate) %>%
mutate("estimate" = estimate*100  ) %>%
mutate(metric = recode(metric, "sens" = "sensitivity"),
metric = recode(metric, "spec" = "specificity")) %>%
# metric = recode(metric, "ppv"  = "positive predictive value"),
# metric = recode(metric, "npv"  = "negative predictive value")) %>%
kbl() %>%
kable_styling(full_width = F)
library(tidyverse) #data cleaning
# library(skimr)  #descriptive statistics
library(mlr)
library(GGally)
library(dplyr)
library(ggplot2)
library(e1071)
library(parsnip)
library(yardstick) # for building con mat
library(knitr)
library(kableExtra)
shiny::runApp('C:/Users/User/Desktop/co2_shinyapp/CO2_ShinyApp')
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
